name: Build and release the container to ECR.

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  # TODO Add standard application build/validate/release/run CI
  build-and-upload-application-bundle:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install dependencies (prefer frozen)
        run: 'npm install'

      - name: Build
        run: 'npm run build'

      - name: Upload build bundle as artifact
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: |
            package.json
            package-lock.json
            build


  build-and-push-docker-image:
    name: Build Docker image and push to registry if on master branch
    runs-on: ubuntu-latest
    needs:
      - build-and-upload-application-bundle

    steps:
      - name: Checkout repo with complete history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Download application build artifact
        uses: actions/download-artifact@v3
        with:
          name: bundle
          path: .

      - name: Build the image
        run: |
          docker build .

      - name: Link the semantic release config and release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          npm install @rimac-technology/semantic-release-ecr
          npx semantic-release


#      # TODO Get credentials from  api.deployer i-love-automation.api.ci user
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: "us-east-1"
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Build, tag, and push docker image to Amazon ECR
#        env:
#          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          REPOSITORY: 'i-love-automation'
#          IMAGE_TAG: 'GET FROM SEMANTIC RELEASE'
#        run: |
#          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
